---
interface Props {
  shouldHighlight: boolean | undefined;
}

const { shouldHighlight } = Astro.props;

import clsx from "clsx";
import { BOOKLETS } from "../i18n/catechesis/booklet/booklets";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const patnameFromUrl = Astro.url.pathname;
const langCode = lang !== "en" ? "/" + lang : "";
const t = useTranslations(lang);
---

<div class="bg-white flex flex-col justify-center">
  <div class="flex items-center justify-center">
    <div class="relative inline-block text-left dropdown">
      <span class="rounded-md"
        ><button
          class={clsx(
            "inline-flex justify-center w-full px-4 py-2 text-sm font-medium leading-5 text-gray-700 transition duration-150 ease-in-out rounded-md focus:outline-none hover:bg-gray-100 active:text-gray-800",
            shouldHighlight ? "bg-gray-100" : "bg-white"
          )}
          type="button"
        >
          <span>{t("nav.catechesis")}</span>
          <svg
            class="w-5 h-5 ml-2 -mr-1"
            viewBox="0 0 20 20"
            fill="currentColor"
            ><path
              fill-rule="evenodd"
              d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
              clip-rule="evenodd"></path></svg
          >
        </button></span
      >
      <div class="hidden dropdown-menu">
        <div
          class="absolute z-10 right-0 w-56 mt-2 origin-top-right bg-white border border-gray-200 divide-y divide-gray-100 rounded-md shadow-lg outline-none"
          aria-labelledby="headlessui-menu-button-1"
          id="headlessui-menu-items-117"
          role="menu"
        >
          <div class="p-1">
            {
              BOOKLETS[lang].map(({ title, pathname }, i) => (
                <a
                  href={`${langCode}${pathname}`}
                  class={clsx(
                    patnameFromUrl.startsWith(langCode + pathname)
                      ? "text-blue-600"
                      : "text-gray-800",
                    "flex justify-between w-full px-4 py-2 text-sm leading-5 text-left hover:bg-gray-100 rounded-md"
                  )}
                  role="menuitem"
                >
                  {title}
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>

  <style>
    .dropdown:focus-within .dropdown-menu {
      /* @apply block; */
      display: block;
    }
  </style>
</div>
